"use strict";(globalThis.webpackChunkthiencode_github_io=globalThis.webpackChunkthiencode_github_io||[]).push([[5427],{7614:(e,i,n)=>{n.r(i),n.d(i,{assets:()=>o,contentTitle:()=>a,default:()=>d,frontMatter:()=>l,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"hsu/SW206DL01-Algorithms-Analysis-and-Design/week1-introduction","title":"Week 1 - Introduction","description":"Notes and diagrams for SW206DL01 - Week 1","source":"@site/docs/hsu/SW206DL01-Algorithms-Analysis-and-Design/week1-introduction.mdx","sourceDirName":"hsu/SW206DL01-Algorithms-Analysis-and-Design","slug":"/hsu/SW206DL01-Algorithms-Analysis-and-Design/week1-introduction","permalink":"/docs/hsu/SW206DL01-Algorithms-Analysis-and-Design/week1-introduction","draft":false,"unlisted":false,"editUrl":"https://github.com/thiencode/thiencode.github.io/tree/main/docs/hsu/SW206DL01-Algorithms-Analysis-and-Design/week1-introduction.mdx","tags":[],"version":"current","frontMatter":{"title":"Week 1 - Introduction","sidebar_label":"Week 1 - Introduction","description":"Notes and diagrams for SW206DL01 - Week 1"},"sidebar":"docs","previous":{"title":"Overview","permalink":"/docs/hsu/SW206DL01-Algorithms-Analysis-and-Design/"},"next":{"title":"Week 2 - Algorithm Complexity","permalink":"/docs/hsu/SW206DL01-Algorithms-Analysis-and-Design/week2-algorithm-complexity"}}');var s=n(7259),r=n(9087);const l={title:"Week 1 - Introduction",sidebar_label:"Week 1 - Introduction",description:"Notes and diagrams for SW206DL01 - Week 1"},a="Week 1: Introduction to Algorithms",o={},c=[{value:"Learning Objectives",id:"learning-objectives",level:2},{value:"What is an Algorithm?",id:"what-is-an-algorithm",level:2},{value:"Key Characteristics of Algorithms",id:"key-characteristics-of-algorithms",level:3},{value:"Algorithm Complexity",id:"algorithm-complexity",level:2},{value:"Time Complexity",id:"time-complexity",level:3},{value:"Space Complexity",id:"space-complexity",level:3},{value:"Basic Examples",id:"basic-examples",level:2},{value:"Example 1: Linear Search",id:"example-1-linear-search",level:3},{value:"Example 2: Binary Search",id:"example-2-binary-search",level:3},{value:"Algorithm Analysis",id:"algorithm-analysis",level:2},{value:"Asymptotic Notation",id:"asymptotic-notation",level:3},{value:"Common Time Complexities",id:"common-time-complexities",level:3},{value:"Next Week",id:"next-week",level:2},{value:"References",id:"references",level:2}];function h(e){const i={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(i.header,{children:(0,s.jsx)(i.h1,{id:"week-1-introduction-to-algorithms",children:"Week 1: Introduction to Algorithms"})}),"\n",(0,s.jsx)(i.h2,{id:"learning-objectives",children:"Learning Objectives"}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:"Understand what algorithms are and why they matter"}),"\n",(0,s.jsx)(i.li,{children:"Learn about algorithm complexity and performance analysis"}),"\n",(0,s.jsx)(i.li,{children:"Introduction to basic algorithm design principles"}),"\n"]}),"\n",(0,s.jsx)(i.h2,{id:"what-is-an-algorithm",children:"What is an Algorithm?"}),"\n",(0,s.jsx)(i.p,{children:"An algorithm is a step-by-step procedure for solving a problem or accomplishing a task. In computer science, algorithms are essential for processing data and performing computations efficiently."}),"\n",(0,s.jsx)(i.h3,{id:"key-characteristics-of-algorithms",children:"Key Characteristics of Algorithms"}),"\n",(0,s.jsxs)(i.ol,{children:["\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.strong,{children:"Input"}),": Algorithms take some input data"]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.strong,{children:"Output"}),": They produce a result"]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.strong,{children:"Definiteness"}),": Each step must be clearly defined"]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.strong,{children:"Finiteness"}),": Must terminate after a finite number of steps"]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.strong,{children:"Effectiveness"}),": Each step must be executable"]}),"\n"]}),"\n",(0,s.jsx)(i.h2,{id:"algorithm-complexity",children:"Algorithm Complexity"}),"\n",(0,s.jsx)(i.h3,{id:"time-complexity",children:"Time Complexity"}),"\n",(0,s.jsx)(i.p,{children:"Measures how the running time of an algorithm increases with the size of the input."}),"\n",(0,s.jsx)(i.h3,{id:"space-complexity",children:"Space Complexity"}),"\n",(0,s.jsx)(i.p,{children:"Measures how much memory an algorithm uses relative to the input size."}),"\n",(0,s.jsx)(i.h2,{id:"basic-examples",children:"Basic Examples"}),"\n",(0,s.jsx)(i.h3,{id:"example-1-linear-search",children:"Example 1: Linear Search"}),"\n",(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{className:"language-javascript",children:"function linearSearch(arr, target) {\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] === target) {\n            return i;\n        }\n    }\n    return -1;\n}\n"})}),"\n",(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.strong,{children:"Time Complexity"}),": O(n) - Linear time\n",(0,s.jsx)(i.strong,{children:"Space Complexity"}),": O(1) - Constant space"]}),"\n",(0,s.jsx)(i.h3,{id:"example-2-binary-search",children:"Example 2: Binary Search"}),"\n",(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{className:"language-javascript",children:"function binarySearch(arr, target) {\n    let left = 0;\n    let right = arr.length - 1;\n\n    while (left <= right) {\n        let mid = Math.floor((left + right) / 2);\n\n        if (arr[mid] === target) {\n            return mid;\n        } else if (arr[mid] < target) {\n            left = mid + 1;\n        } else {\n            right = mid - 1;\n        }\n    }\n\n    return -1;\n}\n"})}),"\n",(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.strong,{children:"Time Complexity"}),": O(log n) - Logarithmic time\n",(0,s.jsx)(i.strong,{children:"Space Complexity"}),": O(1) - Constant space"]}),"\n",(0,s.jsx)(i.h2,{id:"algorithm-analysis",children:"Algorithm Analysis"}),"\n",(0,s.jsx)(i.h3,{id:"asymptotic-notation",children:"Asymptotic Notation"}),"\n",(0,s.jsxs)(i.ol,{children:["\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.strong,{children:"Big O (O)"}),": Upper bound - worst case"]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.strong,{children:"Big Omega (\u03a9)"}),": Lower bound - best case"]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.strong,{children:"Big Theta (\u0398)"}),": Tight bound - average case"]}),"\n"]}),"\n",(0,s.jsx)(i.h3,{id:"common-time-complexities",children:"Common Time Complexities"}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:"O(1) - Constant time"}),"\n",(0,s.jsx)(i.li,{children:"O(log n) - Logarithmic time"}),"\n",(0,s.jsx)(i.li,{children:"O(n) - Linear time"}),"\n",(0,s.jsx)(i.li,{children:"O(n log n) - Linearithmic time"}),"\n",(0,s.jsx)(i.li,{children:"O(n\xb2) - Quadratic time"}),"\n",(0,s.jsx)(i.li,{children:"O(2\u207f) - Exponential time"}),"\n"]}),"\n",(0,s.jsx)(i.h2,{id:"next-week",children:"Next Week"}),"\n",(0,s.jsx)(i.p,{children:"In the next lecture, we'll dive deeper into algorithm complexity analysis and learn how to formally analyze the performance of algorithms."}),"\n",(0,s.jsx)(i.h2,{id:"references",children:"References"}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:(0,s.jsx)(i.a,{href:"https://mitpress.mit.edu/books/introduction-algorithms",children:"Introduction to Algorithms (CLRS)"})}),"\n",(0,s.jsx)(i.li,{children:(0,s.jsx)(i.a,{href:"https://www.algorist.com/",children:"Algorithms Design Manual"})}),"\n"]})]})}function d(e={}){const{wrapper:i}={...(0,r.R)(),...e.components};return i?(0,s.jsx)(i,{...e,children:(0,s.jsx)(h,{...e})}):h(e)}},9087:(e,i,n)=>{n.d(i,{R:()=>l,x:()=>a});var t=n(6363);const s={},r=t.createContext(s);function l(e){const i=t.useContext(r);return t.useMemo(function(){return"function"==typeof e?e(i):{...i,...e}},[i,e])}function a(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:l(e.components),t.createElement(r.Provider,{value:i},e.children)}}}]);