"use strict";(globalThis.webpackChunkthiencode_github_io=globalThis.webpackChunkthiencode_github_io||[]).push([[7792],{2351:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>d,contentTitle:()=>l,default:()=>c,frontMatter:()=>t,metadata:()=>a,toc:()=>o});const a=JSON.parse('{"id":"samples/diagrams-demo","title":"Diagrams Demo","description":"Examples of Mermaid and PlantUML diagrams","source":"@site/docs/samples/diagrams-demo.mdx","sourceDirName":"samples","slug":"/samples/diagrams-demo","permalink":"/docs/samples/diagrams-demo","draft":false,"unlisted":false,"editUrl":"https://github.com/thiencode/thiencode.github.io/tree/main/docs/samples/diagrams-demo.mdx","tags":[],"version":"current","sidebarPosition":5,"frontMatter":{"sidebar_position":5,"title":"Diagrams Demo","description":"Examples of Mermaid and PlantUML diagrams"},"sidebar":"docs","previous":{"title":"Week 1 - Intro to OOAD","permalink":"/docs/hsu/IT206DL01-Object-Oriented-Analysis-and-Design/week1-intro-to-OOAD"},"next":{"title":"Create a Page","permalink":"/docs/samples/tutorial-basics/create-a-page"}}');var r=i(7259),s=i(9087);const t={sidebar_position:5,title:"Diagrams Demo",description:"Examples of Mermaid and PlantUML diagrams"},l="Diagrams Demo",d={},o=[{value:"Mermaid Diagrams",id:"mermaid-diagrams",level:2},{value:"Flow Chart",id:"flow-chart",level:3},{value:"Sequence Diagram",id:"sequence-diagram",level:3},{value:"Class Diagram",id:"class-diagram",level:3},{value:"State Diagram",id:"state-diagram",level:3},{value:"Gantt Chart",id:"gantt-chart",level:3},{value:"Entity Relationship Diagram",id:"entity-relationship-diagram",level:3},{value:"PlantUML Diagrams",id:"plantuml-diagrams",level:2},{value:"Option 1: Using PlantUML Server",id:"option-1-using-plantuml-server",level:3},{value:"Option 2: Embed PlantUML as Images",id:"option-2-embed-plantuml-as-images",level:3},{value:"Option 3: Use Mermaid Alternative",id:"option-3-use-mermaid-alternative",level:3},{value:"Component-like Diagram with Mermaid",id:"component-like-diagram-with-mermaid",level:4},{value:"User Flow Diagram",id:"user-flow-diagram",level:4},{value:"Tips for Using Diagrams",id:"tips-for-using-diagrams",level:2},{value:"Mermaid Tips",id:"mermaid-tips",level:3},{value:"PlantUML Tips",id:"plantuml-tips",level:3},{value:"Best Practices",id:"best-practices",level:3},{value:"Performance Considerations",id:"performance-considerations",level:2},{value:"Troubleshooting",id:"troubleshooting",level:2},{value:"Mermaid not rendering?",id:"mermaid-not-rendering",level:3},{value:"PlantUML images not showing?",id:"plantuml-images-not-showing",level:3},{value:"Learn More",id:"learn-more",level:2}];function m(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",img:"img",li:"li",mermaid:"mermaid",ol:"ol",p:"p",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"diagrams-demo",children:"Diagrams Demo"})}),"\n",(0,r.jsx)(n.p,{children:"This page demonstrates how to use Mermaid and PlantUML diagrams in Docusaurus."}),"\n",(0,r.jsx)(n.h2,{id:"mermaid-diagrams",children:"Mermaid Diagrams"}),"\n",(0,r.jsxs)(n.p,{children:["Mermaid is now supported with the official ",(0,r.jsx)(n.code,{children:"@docusaurus/theme-mermaid"})," theme!"]}),"\n",(0,r.jsx)(n.h3,{id:"flow-chart",children:"Flow Chart"}),"\n",(0,r.jsx)(n.mermaid,{value:"graph TD\n    A[Start] --\x3e B{Is it working?}\n    B --\x3e|Yes| C[Great!]\n    B --\x3e|No| D[Debug]\n    D --\x3e B\n    C --\x3e E[End]"}),"\n",(0,r.jsx)(n.h3,{id:"sequence-diagram",children:"Sequence Diagram"}),"\n",(0,r.jsx)(n.mermaid,{value:"sequenceDiagram\n    participant User\n    participant Frontend\n    participant Backend\n    participant Database\n    \n    User->>Frontend: Request data\n    Frontend->>Backend: API call\n    Backend->>Database: Query\n    Database--\x3e>Backend: Result\n    Backend--\x3e>Frontend: Response\n    Frontend--\x3e>User: Display data"}),"\n",(0,r.jsx)(n.h3,{id:"class-diagram",children:"Class Diagram"}),"\n",(0,r.jsx)(n.mermaid,{value:"classDiagram\n    class Animal {\n        +String name\n        +int age\n        +makeSound()\n    }\n    class Dog {\n        +String breed\n        +bark()\n    }\n    class Cat {\n        +String color\n        +meow()\n    }\n    \n    Animal <|-- Dog\n    Animal <|-- Cat"}),"\n",(0,r.jsx)(n.h3,{id:"state-diagram",children:"State Diagram"}),"\n",(0,r.jsx)(n.mermaid,{value:"stateDiagram-v2\n    [*] --\x3e Idle\n    Idle --\x3e Processing: Start\n    Processing --\x3e Success: Complete\n    Processing --\x3e Error: Failed\n    Success --\x3e [*]\n    Error --\x3e Idle: Retry\n    Error --\x3e [*]: Give up"}),"\n",(0,r.jsx)(n.h3,{id:"gantt-chart",children:"Gantt Chart"}),"\n",(0,r.jsx)(n.mermaid,{value:"gantt\n    title Project Timeline\n    dateFormat YYYY-MM-DD\n    section Phase 1\n    Requirements      :done, req, 2024-01-01, 2024-01-15\n    Design           :done, des, 2024-01-16, 2024-02-01\n    section Phase 2\n    Development      :active, dev, 2024-02-02, 2024-03-15\n    Testing          :test, 2024-03-16, 2024-04-01\n    section Phase 3\n    Deployment       :deploy, 2024-04-02, 2024-04-10"}),"\n",(0,r.jsx)(n.h3,{id:"entity-relationship-diagram",children:"Entity Relationship Diagram"}),"\n",(0,r.jsx)(n.mermaid,{value:"erDiagram\n    CUSTOMER ||--o{ ORDER : places\n    ORDER ||--|{ LINE-ITEM : contains\n    CUSTOMER }|..|{ DELIVERY-ADDRESS : uses\n    \n    CUSTOMER {\n        string name\n        string email\n        string phone\n    }\n    ORDER {\n        int orderNumber\n        date orderDate\n        string status\n    }\n    LINE-ITEM {\n        string productCode\n        int quantity\n        float price\n    }"}),"\n",(0,r.jsx)(n.h2,{id:"plantuml-diagrams",children:"PlantUML Diagrams"}),"\n",(0,r.jsx)(n.p,{children:"PlantUML can be used by embedding images from PlantUML server or using external tools."}),"\n",(0,r.jsx)(n.h3,{id:"option-1-using-plantuml-server",children:"Option 1: Using PlantUML Server"}),"\n",(0,r.jsxs)(n.p,{children:["You can generate diagrams using the ",(0,r.jsx)(n.a,{href:"http://www.plantuml.com/plantuml/uml/",children:"PlantUML Web Server"}),":"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{src:"https://www.plantuml.com/plantuml/png/NP31JiCm38RlUGgh9pZi1T0qRUoCc9Z4tSIcYveuLU9gL8XtXsJDf7Aplq_k_pVxh9Xq2jvu_bJG2Cdr5mLoYQswA2OFJaPC6614Es3FPvqzGz4elMU3LcE2xZXbZO5J1vZ1BakJ1mfEgi4o6NC_X-vLl1E6yoMEevCUpdDM3Xry6u27vnIlcU6K8arMysFvn4TbnHw8IkKZ9gq6YGe-NjWESRenkon5lE30SC8viDpaYFED2_R_Ka9bnRuxli8RZp4jAjNP_1ZJ_XCscrthjM98j0QjpfgM7gO-JLbRzXsqHDEksn4ymNRhnFg9UBSpIBGAgPg_b8N-x9w5fk1_0G00",alt:"Use Case Diagram"})}),"\n",(0,r.jsx)(n.h3,{id:"option-2-embed-plantuml-as-images",children:"Option 2: Embed PlantUML as Images"}),"\n",(0,r.jsxs)(n.p,{children:["Create your diagram at ",(0,r.jsx)(n.a,{href:"https://www.plantuml.com/plantuml/uml/",children:"PlantUML Editor"})," and embed the image URL."]}),"\n",(0,r.jsx)(n.h3,{id:"option-3-use-mermaid-alternative",children:"Option 3: Use Mermaid Alternative"}),"\n",(0,r.jsx)(n.p,{children:"For many UML diagrams, Mermaid provides excellent alternatives:"}),"\n",(0,r.jsx)(n.h4,{id:"component-like-diagram-with-mermaid",children:"Component-like Diagram with Mermaid"}),"\n",(0,r.jsx)(n.mermaid,{value:"graph TB\n    subgraph Frontend\n        React[React App]\n        Redux[Redux Store]\n        API[API Client]\n    end\n    \n    subgraph Backend\n        REST[REST API]\n        Logic[Business Logic]\n        DB[(Database)]\n    end\n    \n    React --\x3e Redux\n    React --\x3e API\n    API --\x3e REST\n    REST --\x3e Logic\n    Logic --\x3e DB"}),"\n",(0,r.jsx)(n.h4,{id:"user-flow-diagram",children:"User Flow Diagram"}),"\n",(0,r.jsx)(n.mermaid,{value:"flowchart TD\n    Start([User opens app]) --\x3e Check{Is logged in?}\n    Check --\x3e|Yes| Dashboard[Show dashboard]\n    Check --\x3e|No| Login[Show login page]\n    Login --\x3e Credentials[User enters credentials]\n    Credentials --\x3e Valid{Valid credentials?}\n    Valid --\x3e|Yes| Success[Login successful]\n    Valid --\x3e|No| Error[Show error message]\n    Success --\x3e Dashboard\n    Error --\x3e End([Stop])\n    Dashboard --\x3e Actions[User performs actions]\n    Actions --\x3e End"}),"\n",(0,r.jsx)(n.h2,{id:"tips-for-using-diagrams",children:"Tips for Using Diagrams"}),"\n",(0,r.jsx)(n.h3,{id:"mermaid-tips",children:"Mermaid Tips"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Syntax"}),": Use triple backticks with ",(0,r.jsx)(n.code,{children:"mermaid"})," language identifier"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Live Preview"}),": Diagrams render automatically in development"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Theming"}),": Mermaid diagrams adapt to light/dark mode"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Documentation"}),": ",(0,r.jsx)(n.a,{href:"https://mermaid.js.org/",children:"Mermaid Official Docs"})]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"plantuml-tips",children:"PlantUML Tips"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"External Server"}),": Use PlantUML web server to generate diagram URLs"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Image Embedding"}),": Embed generated diagram images in your docs"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Local Tools"}),": Use PlantUML desktop tools for complex diagrams"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Documentation"}),": ",(0,r.jsx)(n.a,{href:"https://plantuml.com/",children:"PlantUML Official Site"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Mermaid Alternative"}),": Consider using Mermaid for most diagram needs"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"best-practices",children:"Best Practices"}),"\n",(0,r.jsxs)(n.p,{children:["\u2705 ",(0,r.jsx)(n.strong,{children:"Do:"})]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Keep diagrams simple and focused"}),"\n",(0,r.jsx)(n.li,{children:"Use meaningful labels and descriptions"}),"\n",(0,r.jsx)(n.li,{children:"Test diagrams in both light and dark modes"}),"\n",(0,r.jsx)(n.li,{children:"Add comments to explain complex parts"}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["\u274c ",(0,r.jsx)(n.strong,{children:"Don't:"})]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Create overly complex diagrams"}),"\n",(0,r.jsx)(n.li,{children:"Use tiny font sizes"}),"\n",(0,r.jsx)(n.li,{children:"Forget to test diagram rendering"}),"\n",(0,r.jsx)(n.li,{children:"Mix too many concepts in one diagram"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"performance-considerations",children:"Performance Considerations"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Mermaid"}),": Rendered client-side, fast and responsive"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"PlantUML Images"}),": Pre-generated, fast loading"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Large diagrams"}),": Consider splitting into multiple smaller diagrams"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Build time"}),": Mermaid diagrams are compiled during build"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"troubleshooting",children:"Troubleshooting"}),"\n",(0,r.jsx)(n.h3,{id:"mermaid-not-rendering",children:"Mermaid not rendering?"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:"Check syntax errors in your diagram code"}),"\n",(0,r.jsxs)(n.li,{children:["Verify ",(0,r.jsx)(n.code,{children:"@docusaurus/theme-mermaid"})," is in themes array"]}),"\n",(0,r.jsxs)(n.li,{children:["Ensure ",(0,r.jsx)(n.code,{children:"markdown.mermaid: true"})," is set in config"]}),"\n",(0,r.jsxs)(n.li,{children:["Clear cache: ",(0,r.jsx)(n.code,{children:"pnpm clear"})," and rebuild"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"plantuml-images-not-showing",children:"PlantUML images not showing?"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:"Check if the PlantUML server URL is accessible"}),"\n",(0,r.jsx)(n.li,{children:"Verify the diagram syntax is correct"}),"\n",(0,r.jsx)(n.li,{children:"Try regenerating the diagram URL"}),"\n",(0,r.jsx)(n.li,{children:"Consider using local PlantUML installation for offline work"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"learn-more",children:"Learn More"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://docusaurus.io/docs/markdown-features/diagrams",children:"Docusaurus Mermaid Documentation"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://mermaid.live/",children:"Mermaid Live Editor"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"http://www.plantuml.com/plantuml/uml/",children:"PlantUML Web Server"})}),"\n"]})]})}function c(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(m,{...e})}):m(e)}},9087:(e,n,i)=>{i.d(n,{R:()=>t,x:()=>l});var a=i(6363);const r={},s=a.createContext(r);function t(e){const n=a.useContext(s);return a.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:t(e.components),a.createElement(s.Provider,{value:n},e.children)}}}]);