"use strict";(globalThis.webpackChunkthiencode_github_io=globalThis.webpackChunkthiencode_github_io||[]).push([[3849],{9087:(e,n,i)=>{i.d(n,{R:()=>l,x:()=>a});var t=i(6363);const r={},s=t.createContext(r);function l(e){const n=t.useContext(s);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:l(e.components),t.createElement(s.Provider,{value:n},e.children)}},9733:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>o,contentTitle:()=>a,default:()=>h,frontMatter:()=>l,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"hsu/SW206DL01-Algorithms-Analysis-and-Design/week2-algorithm-complexity","title":"Week 2 - Algorithm Complexity","description":"Notes and diagrams for SW206DL01 - Week 2","source":"@site/docs/hsu/SW206DL01-Algorithms-Analysis-and-Design/week2-algorithm-complexity.mdx","sourceDirName":"hsu/SW206DL01-Algorithms-Analysis-and-Design","slug":"/hsu/SW206DL01-Algorithms-Analysis-and-Design/week2-algorithm-complexity","permalink":"/docs/hsu/SW206DL01-Algorithms-Analysis-and-Design/week2-algorithm-complexity","draft":false,"unlisted":false,"editUrl":"https://github.com/thiencode/thiencode.github.io/tree/main/docs/hsu/SW206DL01-Algorithms-Analysis-and-Design/week2-algorithm-complexity.mdx","tags":[],"version":"current","frontMatter":{"title":"Week 2 - Algorithm Complexity","sidebar_label":"Week 2 - Algorithm Complexity","description":"Notes and diagrams for SW206DL01 - Week 2"},"sidebar":"docs","previous":{"title":"Week 1 - Introduction","permalink":"/docs/hsu/SW206DL01-Algorithms-Analysis-and-Design/week1-introduction"},"next":{"title":"Overview","permalink":"/docs/hsu/IT206DL01-Object-Oriented-Analysis-and-Design/"}}');var r=i(7259),s=i(9087);const l={title:"Week 2 - Algorithm Complexity",sidebar_label:"Week 2 - Algorithm Complexity",description:"Notes and diagrams for SW206DL01 - Week 2"},a="Week 2: Algorithm Complexity Analysis",o={},c=[{value:"Learning Objectives",id:"learning-objectives",level:2},{value:"Asymptotic Notation",id:"asymptotic-notation",level:2},{value:"Big O Notation - O(f(n))",id:"big-o-notation---ofn",level:3},{value:"Big \u03a9 Notation - \u03a9(f(n))",id:"big-\u03c9-notation---\u03c9fn",level:3},{value:"Big \u0398 Notation - \u0398(f(n))",id:"big-\u03b8-notation---\u03b8fn",level:3},{value:"Time Complexity Analysis",id:"time-complexity-analysis",level:2},{value:"Example: Nested Loops",id:"example-nested-loops",level:3},{value:"Example: Sequential Statements",id:"example-sequential-statements",level:3},{value:"Example: Conditional Statements",id:"example-conditional-statements",level:3},{value:"Space Complexity Analysis",id:"space-complexity-analysis",level:2},{value:"Example: Array Operations",id:"example-array-operations",level:3},{value:"Example: In-Place Operations",id:"example-in-place-operations",level:3},{value:"Best, Worst, and Average Case",id:"best-worst-and-average-case",level:2},{value:"Linear Search Example",id:"linear-search-example",level:3},{value:"Binary Search Example",id:"binary-search-example",level:3},{value:"Common Time Complexities",id:"common-time-complexities",level:2},{value:"Complexity Analysis Tips",id:"complexity-analysis-tips",level:2},{value:"Practice Problems",id:"practice-problems",level:2},{value:"Next Week",id:"next-week",level:2},{value:"References",id:"references",level:2}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"week-2-algorithm-complexity-analysis",children:"Week 2: Algorithm Complexity Analysis"})}),"\n",(0,r.jsx)(n.h2,{id:"learning-objectives",children:"Learning Objectives"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Master asymptotic notation (Big O, Big \u03a9, Big \u0398)"}),"\n",(0,r.jsx)(n.li,{children:"Learn to analyze time and space complexity"}),"\n",(0,r.jsx)(n.li,{children:"Understand best, worst, and average case analysis"}),"\n",(0,r.jsx)(n.li,{children:"Practice complexity analysis with examples"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"asymptotic-notation",children:"Asymptotic Notation"}),"\n",(0,r.jsx)(n.h3,{id:"big-o-notation---ofn",children:"Big O Notation - O(f(n))"}),"\n",(0,r.jsxs)(n.p,{children:["Represents the ",(0,r.jsx)(n.strong,{children:"upper bound"})," of an algorithm's growth rate."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Formal Definition:"}),"\nf(n) = O(g(n)) if there exist constants c > 0 and n\u2080 > 0 such that:\nf(n) \u2264 c \xd7 g(n) for all n \u2265 n\u2080"]}),"\n",(0,r.jsx)(n.h3,{id:"big-\u03c9-notation---\u03c9fn",children:"Big \u03a9 Notation - \u03a9(f(n))"}),"\n",(0,r.jsxs)(n.p,{children:["Represents the ",(0,r.jsx)(n.strong,{children:"lower bound"})," of an algorithm's growth rate."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Formal Definition:"}),"\nf(n) = \u03a9(g(n)) if there exist constants c > 0 and n\u2080 > 0 such that:\nf(n) \u2265 c \xd7 g(n) for all n \u2265 n\u2080"]}),"\n",(0,r.jsx)(n.h3,{id:"big-\u03b8-notation---\u03b8fn",children:"Big \u0398 Notation - \u0398(f(n))"}),"\n",(0,r.jsxs)(n.p,{children:["Represents the ",(0,r.jsx)(n.strong,{children:"tight bound"})," of an algorithm's growth rate."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Formal Definition:"}),"\nf(n) = \u0398(g(n)) if there exist constants c\u2081, c\u2082 > 0 and n\u2080 > 0 such that:\nc\u2081 \xd7 g(n) \u2264 f(n) \u2264 c\u2082 \xd7 g(n) for all n \u2265 n\u2080"]}),"\n",(0,r.jsx)(n.h2,{id:"time-complexity-analysis",children:"Time Complexity Analysis"}),"\n",(0,r.jsx)(n.h3,{id:"example-nested-loops",children:"Example: Nested Loops"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"function nestedLoops(n) {\n    let count = 0;\n    for (let i = 0; i < n; i++) {        // O(n)\n        for (let j = 0; j < n; j++) {    // O(n)\n            count++;                     // O(1)\n        }\n    }\n    return count;\n}\n"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Total Time Complexity"}),": O(n\xb2)"]}),"\n",(0,r.jsx)(n.h3,{id:"example-sequential-statements",children:"Example: Sequential Statements"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"function sequential(n) {\n    let sum = 0;\n    for (let i = 0; i < n; i++) {        // O(n)\n        sum += i;\n    }\n\n    let product = 1;\n    for (let j = 1; j <= n; j++) {       // O(n)\n        product *= j;\n    }\n\n    return { sum, product };             // O(1)\n}\n"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Total Time Complexity"}),": O(n)"]}),"\n",(0,r.jsx)(n.h3,{id:"example-conditional-statements",children:"Example: Conditional Statements"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"function findMax(arr) {\n    if (arr.length === 0) return null;   // O(1)\n\n    let max = arr[0];                    // O(1)\n    for (let i = 1; i < arr.length; i++) { // O(n)\n        if (arr[i] > max) {              // O(1)\n            max = arr[i];                // O(1)\n        }\n    }\n    return max;                          // O(1)\n}\n"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Time Complexity"}),": O(n) - We consider the worst case"]}),"\n",(0,r.jsx)(n.h2,{id:"space-complexity-analysis",children:"Space Complexity Analysis"}),"\n",(0,r.jsx)(n.h3,{id:"example-array-operations",children:"Example: Array Operations"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"function createArray(n) {\n    let arr = [];                        // O(n) space\n    for (let i = 0; i < n; i++) {        // O(n) time\n        arr.push(i * i);                 // O(1)\n    }\n    return arr;                          // O(1)\n}\n"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Time Complexity"}),": O(n)\n",(0,r.jsx)(n.strong,{children:"Space Complexity"}),": O(n)"]}),"\n",(0,r.jsx)(n.h3,{id:"example-in-place-operations",children:"Example: In-Place Operations"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"function reverseArray(arr) {\n    let left = 0;\n    let right = arr.length - 1;\n\n    while (left < right) {               // O(n) time\n        // Swap elements\n        let temp = arr[left];            // O(1) space\n        arr[left] = arr[right];\n        arr[right] = temp;\n\n        left++;\n        right--;\n    }\n\n    return arr;\n}\n"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Time Complexity"}),": O(n)\n",(0,r.jsx)(n.strong,{children:"Space Complexity"}),": O(1) - Only using constant extra space"]}),"\n",(0,r.jsx)(n.h2,{id:"best-worst-and-average-case",children:"Best, Worst, and Average Case"}),"\n",(0,r.jsx)(n.h3,{id:"linear-search-example",children:"Linear Search Example"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"function linearSearch(arr, target) {\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] === target) {\n            return i;\n        }\n    }\n    return -1;\n}\n"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Best Case"}),": O(1) - Target is at index 0\n",(0,r.jsx)(n.strong,{children:"Worst Case"}),": O(n) - Target is at last index or not found\n",(0,r.jsx)(n.strong,{children:"Average Case"}),": O(n/2) = O(n)"]}),"\n",(0,r.jsx)(n.h3,{id:"binary-search-example",children:"Binary Search Example"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"function binarySearch(arr, target) {\n    let left = 0;\n    let right = arr.length - 1;\n\n    while (left <= right) {\n        let mid = Math.floor((left + right) / 2);\n\n        if (arr[mid] === target) {\n            return mid;\n        } else if (arr[mid] < target) {\n            left = mid + 1;\n        } else {\n            right = mid - 1;\n        }\n    }\n\n    return -1;\n}\n"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Best Case"}),": O(1) - Target is at middle element\n",(0,r.jsx)(n.strong,{children:"Worst Case"}),": O(log n) - Target not found or at ends\n",(0,r.jsx)(n.strong,{children:"Average Case"}),": O(log n)"]}),"\n",(0,r.jsx)(n.h2,{id:"common-time-complexities",children:"Common Time Complexities"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Complexity"}),(0,r.jsx)(n.th,{children:"Name"}),(0,r.jsx)(n.th,{children:"Example"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"O(1)"}),(0,r.jsx)(n.td,{children:"Constant"}),(0,r.jsx)(n.td,{children:"Array access, arithmetic operations"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"O(log n)"}),(0,r.jsx)(n.td,{children:"Logarithmic"}),(0,r.jsx)(n.td,{children:"Binary search, balanced BST operations"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"O(n)"}),(0,r.jsx)(n.td,{children:"Linear"}),(0,r.jsx)(n.td,{children:"Linear search, traversing array"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"O(n log n)"}),(0,r.jsx)(n.td,{children:"Linearithmic"}),(0,r.jsx)(n.td,{children:"Merge sort, quick sort, heap sort"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"O(n\xb2)"}),(0,r.jsx)(n.td,{children:"Quadratic"}),(0,r.jsx)(n.td,{children:"Bubble sort, insertion sort, nested loops"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"O(2\u207f)"}),(0,r.jsx)(n.td,{children:"Exponential"}),(0,r.jsx)(n.td,{children:"Recursive fibonacci, subset generation"})]})]})]}),"\n",(0,r.jsx)(n.h2,{id:"complexity-analysis-tips",children:"Complexity Analysis Tips"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Focus on the dominant term"})," - Drop lower order terms and constants"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Consider worst case"})," unless specified otherwise"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Look for loops and recursion"})," - These often determine complexity"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Analyze space usage"})," - Don't forget about memory!"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"practice-problems",children:"Practice Problems"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:"Analyze the time complexity of the following function:"}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"function mystery(n) {\n    let sum = 0;\n    for (let i = 1; i <= n; i *= 2) {\n        for (let j = 0; j < i; j++) {\n            sum++;\n        }\n    }\n    return sum;\n}\n"})}),"\n",(0,r.jsxs)(n.ol,{start:"2",children:["\n",(0,r.jsx)(n.li,{children:"What is the space complexity of this recursive function?"}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"function factorial(n) {\n    if (n <= 1) return 1;\n    return n * factorial(n - 1);\n}\n"})}),"\n",(0,r.jsx)(n.h2,{id:"next-week",children:"Next Week"}),"\n",(0,r.jsx)(n.p,{children:"In the next lecture, we'll explore different algorithm design paradigms and start implementing various sorting algorithms."}),"\n",(0,r.jsx)(n.h2,{id:"references",children:"References"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://www.bigocheatsheet.com/",children:"Big O Notation Guide"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://visualgo.net/en",children:"Algorithm Complexity Analysis"})}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}}}]);